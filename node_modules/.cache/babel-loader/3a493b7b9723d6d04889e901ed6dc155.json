{"ast":null,"code":"import _slicedToArray from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/YASH/path-find-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Node from'./Node';import{dijkstra}from'../algorithms/dijkstra';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PathFindVisualizer=/*#__PURE__*/function(_Component){_inherits(PathFindVisualizer,_Component);var _super=_createSuper(PathFindVisualizer);function PathFindVisualizer(props){var _this;_classCallCheck(this,PathFindVisualizer);_this=_super.call(this,props);_this.state={grid:[],startNode:{row:15,col:2},finishNode:{row:15,col:20},mousePressed:false,clickedOnStartNode:false,clickedOnFinishNode:false};return _this;}_createClass(PathFindVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=this.createGrid();this.setState({grid:grid});}},{key:\"selectStartNode\",value:function selectStartNode(){if(this.state.clickedOnStartNode)this.setState({clickedOnStartNode:false});else this.setState({clickedOnStartNode:true});}},{key:\"selectFinishNode\",value:function selectFinishNode(){if(this.state.clickedOnFinishNode)this.setState({clickedOnFinishNode:false});else this.setState({clickedOnFinishNode:true});}},{key:\"handleMouseDown\",value:function handleMouseDown(row,col){if(this.state.clickedOnStartNode){var newGrid=this.state.grid.slice();var node1=newGrid[row][col];var node2=newGrid[this.state.startNode.row][this.state.startNode.col];var newNode1=_objectSpread(_objectSpread({},node1),{},{isStart:true});var newNode2=_objectSpread(_objectSpread({},node2),{},{isStart:false});newGrid[row][col]=newNode1;newGrid[this.state.startNode.row][this.state.startNode.col]=newNode2;this.setState({grid:newGrid,startNode:{row:row,col:col},clickedOnStartNode:false});}else if(this.state.clickedOnFinishNode){var _newGrid=this.state.grid.slice();var _node=_newGrid[row][col];var _node2=_newGrid[this.state.finishNode.row][this.state.finishNode.col];var _newNode=_objectSpread(_objectSpread({},_node),{},{isFinish:true});var _newNode2=_objectSpread(_objectSpread({},_node2),{},{isFinish:false});_newGrid[row][col]=_newNode;_newGrid[this.state.finishNode.row][this.state.finishNode.col]=_newNode2;this.setState({grid:_newGrid,finishNode:{row:row,col:col},clickedOnFinishNode:false});}else{var _newGrid2=creatGridWallToglled(this.state.grid,row,col);this.setState({grid:_newGrid2,mousePressed:true});}}},{key:\"handleMouseEnter\",value:function handleMouseEnter(row,col){if(this.state.mousePressed){var newGrid=creatGridWallToglled(this.state.grid,row,col);this.setState({grid:newGrid});}}},{key:\"handleMouseUp\",value:function handleMouseUp(row,col){this.setState({mousePressed:false});}},{key:\"animateDijkstra\",value:function animateDijkstra(visitedNodes,path){var _this2=this;var _loop=function _loop(i){if(i===visitedNodes.length){setTimeout(function(){_this2.animateShortestPath(path);},10*i);return{v:void 0};}setTimeout(function(){var node=visitedNodes[i];var newGrid=_this2.state.grid.slice();var newNode=_objectSpread(_objectSpread({},node),{},{isVisited:true});newGrid[node.row][node.col]=newNode;_this2.setState({grid:newGrid});},10*i);};for(var i=0;i<=visitedNodes.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}}},{key:\"animateShortestPath\",value:function animateShortestPath(path){var _this3=this;var _loop2=function _loop2(j){setTimeout(function(){var node=path[j];var newGrid=_this3.state.grid.slice();var newNode=_objectSpread(_objectSpread({},node),{},{isVisited:false,isInPath:true});newGrid[node.row][node.col]=newNode;_this3.setState({grid:newGrid});},25*j);};for(var j=0;j<path.length;j++){_loop2(j);}}},{key:\"visualizeDijkstra\",value:function visualizeDijkstra(){var grid=this.state.grid;var startNode=grid[this.state.startNode.row][this.state.startNode.col];var finishNode=grid[this.state.finishNode.row][this.state.finishNode.col];console.log(finishNode);var _dijkstra=dijkstra(grid,startNode,finishNode),_dijkstra2=_slicedToArray(_dijkstra,2),visitedNodes=_dijkstra2[0],path=_dijkstra2[1];var grid1=this.refreshGrid();this.setState({grid:grid1});this.animateDijkstra(visitedNodes,path);}},{key:\"refreshGrid\",value:function refreshGrid(){var newGrid=this.state.grid.slice();for(var row=0;row<this.props.i;row++){for(var col=0;col<this.props.j;col++){var node=newGrid[row][col];var currentNode=_objectSpread(_objectSpread({},node),{},{isVisited:false});newGrid[row][col]=currentNode;}}return newGrid;}},{key:\"createGrid\",value:function createGrid(){var grid=[];for(var row=0;row<this.props.i;row++){var currentRow=[];for(var col=0;col<this.props.j;col++){var currentNode={row:row,col:col,isStart:row===this.state.startNode.row&&col===this.state.startNode.col,isFinish:row===this.state.finishNode.row&&col===this.state.finishNode.col,distance:Infinity,isWall:false,isInPath:false,isVisited:false,parentNode:null,isBorder:false};if(row===0||col===0||row===29||col===59){currentNode.isBorder=true;}currentRow.push(currentNode);}grid.push(currentRow);}return grid;}},{key:\"render\",value:function render(){var _this4=this;var grid=this.state.grid;var align={textAlign:\"center\",fontSize:\"0\"};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this4.visualizeDijkstra();},children:\" Visualize Dijkstra's Algorithm\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return _this4.selectStartNode();},style:{marginLeft:\"5px\",marginRight:\"5px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"node-start\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Start Node\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return _this4.selectFinishNode();},children:[/*#__PURE__*/_jsx(\"div\",{className:\"node-finish\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Finish Node\"})]}),/*#__PURE__*/_jsxs(\"button\",{style:{marginLeft:\"5px\",marginRight:\"5px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"node-isWall\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Wall Node\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this4.componentDidMount();},style:{marginLeft:\"5px\",marginRight:\"5px\"},children:\" Reset\"}),/*#__PURE__*/_jsx(\"div\",{style:align,className:\"my-3\",children:grid.map(function(row,rowIdx){return/*#__PURE__*/_jsx(\"div\",{children:row.map(function(node,nodeIdx){var row=node.row,isStart=node.isStart,isFinish=node.isFinish,isVisited=node.isVisited,isInPath=node.isInPath,isWall=node.isWall,col=node.col,isBorder=node.isBorder;return/*#__PURE__*/_jsx(Node,{row:row,col:col,isStart:isStart,isFinish:isFinish,isWall:isWall,isVisited:isVisited,isInPath:isInPath,isBorder:isBorder,onMouseDown:function onMouseDown(row,col){return _this4.handleMouseDown(row,col);},onMouseUp:function onMouseUp(row,col){return _this4.handleMouseUp(row,col);},onMouseEnter:function onMouseEnter(row,col){return _this4.handleMouseEnter(row,col);}},nodeIdx);})},rowIdx);})})]})});}}]);return PathFindVisualizer;}(Component);export{PathFindVisualizer as default};var creatGridWallToglled=function creatGridWallToglled(grid,row,col){var newGrid=grid.slice();console.log(newGrid);var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:!node.isWall});newGrid[row][col]=newNode;return newGrid;};","map":{"version":3,"sources":["C:/Users/YASH/path-find-visualizer/src/mycomponents/PathFindingVisualizer.js"],"names":["React","Component","Node","dijkstra","PathFindVisualizer","props","state","grid","startNode","row","col","finishNode","mousePressed","clickedOnStartNode","clickedOnFinishNode","createGrid","setState","newGrid","slice","node1","node2","newNode1","isStart","newNode2","isFinish","creatGridWallToglled","visitedNodes","path","i","length","setTimeout","animateShortestPath","node","newNode","isVisited","j","isInPath","console","log","grid1","refreshGrid","animateDijkstra","currentNode","currentRow","distance","Infinity","isWall","parentNode","isBorder","push","align","textAlign","fontSize","marginTop","visualizeDijkstra","selectStartNode","marginLeft","marginRight","selectFinishNode","componentDidMount","map","rowIdx","nodeIdx","handleMouseDown","handleMouseUp","handleMouseEnter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Node from './Node';\r\nimport { dijkstra } from '../algorithms/dijkstra';\r\n\r\nexport default class PathFindVisualizer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            grid:[],\r\n            startNode:{row:15,col:2},\r\n            finishNode:{row:15,col:20},\r\n            mousePressed:false,\r\n            clickedOnStartNode:false,\r\n            clickedOnFinishNode:false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const grid = this.createGrid()\r\n        this.setState({grid})\r\n    }\r\n\r\n    selectStartNode(){\r\n        if(this.state.clickedOnStartNode) this.setState({clickedOnStartNode:false})\r\n        else this.setState({clickedOnStartNode:true})\r\n    }\r\n\r\n    selectFinishNode(){\r\n        if(this.state.clickedOnFinishNode) this.setState({clickedOnFinishNode:false})\r\n        else this.setState({clickedOnFinishNode:true})\r\n    }\r\n\r\n    handleMouseDown(row,col){\r\n        if(this.state.clickedOnStartNode){\r\n            const newGrid = this.state.grid.slice()\r\n            const node1 = newGrid[row][col]\r\n            const node2 = newGrid[this.state.startNode.row][this.state.startNode.col]\r\n            const newNode1 = {\r\n                ...node1,\r\n               isStart:true,\r\n            };\r\n            const newNode2 = {\r\n                ...node2,\r\n                isStart:false\r\n            }\r\n            newGrid[row][col] = newNode1\r\n            newGrid[this.state.startNode.row][this.state.startNode.col] = newNode2\r\n            this.setState({grid:newGrid,startNode:{row,col},clickedOnStartNode:false})\r\n        }\r\n        else if(this.state.clickedOnFinishNode){\r\n            const newGrid = this.state.grid.slice()\r\n            const node1 = newGrid[row][col]\r\n            const node2 = newGrid[this.state.finishNode.row][this.state.finishNode.col]\r\n            const newNode1 = {\r\n                ...node1,\r\n               isFinish:true,\r\n            };\r\n            const newNode2 = {\r\n                ...node2,\r\n                isFinish:false\r\n            }\r\n            newGrid[row][col] = newNode1\r\n            newGrid[this.state.finishNode.row][this.state.finishNode.col] = newNode2\r\n            this.setState({grid:newGrid,finishNode:{row,col},clickedOnFinishNode:false})\r\n        }\r\n        else{\r\n            const newGrid = creatGridWallToglled(this.state.grid,row,col)\r\n            this.setState({grid:newGrid,mousePressed:true})\r\n        }\r\n    }\r\n\r\n    handleMouseEnter(row,col){\r\n        if(this.state.mousePressed){\r\n            const newGrid = creatGridWallToglled(this.state.grid,row,col)\r\n            this.setState({grid:newGrid})\r\n        }\r\n    }\r\n\r\n    handleMouseUp(row,col){\r\n        this.setState({mousePressed:false})\r\n    }\r\n\r\n    animateDijkstra(visitedNodes,path){\r\n        for(let i=0;i<=visitedNodes.length;i++){\r\n            if(i===visitedNodes.length){\r\n                setTimeout(()=>{\r\n                    this.animateShortestPath(path)\r\n                },10*i)\r\n                return\r\n            }\r\n            setTimeout(()=>{\r\n             const node = visitedNodes[i]\r\n         const newGrid = this.state.grid.slice();\r\n         const newNode = {\r\n             ...node,\r\n             isVisited:true\r\n         };\r\n         newGrid[node.row][node.col] = newNode\r\n             this.setState({grid:newGrid});\r\n            },10* i);\r\n        }\r\n       }\r\n\r\n    animateShortestPath(path){\r\n        for(let j =0;j<path.length;j++){\r\n            setTimeout(()=>{\r\n                const node = path[j]\r\n                const newGrid = this.state.grid.slice();\r\n                const newNode = {\r\n                    ...node,\r\n                    isVisited:false,\r\n                    isInPath:true\r\n                };\r\n                newGrid[node.row][node.col] = newNode\r\n                    this.setState({grid:newGrid});\r\n        },25*j)\r\n       }\r\n    }\r\n\r\n    visualizeDijkstra(){\r\n       const {grid} = this.state\r\n       const startNode = grid[this.state.startNode.row][this.state.startNode.col]\r\n       const finishNode = grid[this.state.finishNode.row][this.state.finishNode.col]\r\n       console.log(finishNode)\r\n       const [visitedNodes,path] = dijkstra(grid,startNode,finishNode)\r\n       let grid1 = this.refreshGrid()\r\n       this.setState({grid:grid1})\r\n       this.animateDijkstra(visitedNodes,path)\r\n       \r\n    }\r\n\r\n    refreshGrid(){\r\n        const newGrid = this.state.grid.slice()\r\n        for (let row = 0; row < this.props.i; row++) {\r\n            for (let col = 0; col < this.props.j; col++) {\r\n                let node = newGrid[row][col]\r\n                const currentNode = {\r\n                    ...node,\r\n                    isVisited:false\r\n                }\r\n                newGrid[row][col] = currentNode\r\n            }\r\n        }\r\n        return newGrid\r\n    }\r\n\r\n    createGrid(){\r\n        let grid = []\r\n        for (let row = 0; row < this.props.i; row++) {\r\n            let currentRow = []\r\n            for (let col = 0; col < this.props.j; col++) {\r\n                let currentNode = {\r\n                    row,\r\n                    col,\r\n                    isStart:row===this.state.startNode.row && col===this.state.startNode.col,\r\n                    isFinish:row===this.state.finishNode.row && col===this.state.finishNode.col,\r\n                    distance:Infinity,\r\n                    isWall:false,\r\n                    isInPath:false,\r\n                    isVisited:false,\r\n                    parentNode:null,\r\n                    isBorder:false\r\n                }\r\n                if(row === 0 || col === 0 || row === 29 || col === 59){\r\n                    currentNode.isBorder = true\r\n                }\r\n                currentRow.push(currentNode)\r\n            }\r\n            grid.push(currentRow)\r\n        }\r\n        return grid\r\n    }\r\n    \r\n\r\n    render(){\r\n        const {grid} = this.state;\r\n        let align = {\r\n            textAlign:\"center\",\r\n            fontSize:\"0\"\r\n        }\r\n        return(\r\n        <>\r\n        <div style={{marginTop:\"10px\"}}>\r\n        <button onClick={()=>this.visualizeDijkstra()}> Visualize Dijkstra's Algorithm</button>\r\n        <button onClick={()=>this.selectStartNode()} style={{marginLeft:\"5px\",marginRight:\"5px\"}}>\r\n        <div className=\"node-start\"></div>\r\n        <p>Start Node</p>\r\n        </button>\r\n        <button onClick={()=>this.selectFinishNode()}>\r\n        <div className=\"node-finish\"></div>\r\n        <p>Finish Node</p>\r\n        </button>\r\n        <button style={{marginLeft:\"5px\",marginRight:\"5px\"}}>\r\n        <div className=\"node-isWall\" ></div>\r\n        <p>Wall Node</p>\r\n        </button>\r\n        <button onClick={()=>this.componentDidMount()} style={{marginLeft:\"5px\",marginRight:\"5px\"}}> Reset</button>\r\n        <div style={align} className=\"my-3\">\r\n        {\r\n          grid.map((row,rowIdx)=>{\r\n              return <div key={rowIdx}>\r\n                  {row.map((node,nodeIdx) => {\r\n                  const {row,isStart,isFinish,isVisited,isInPath,isWall,col,isBorder} = node\r\n                  return (<Node key={nodeIdx} \r\n                    row={row}\r\n                    col={col}\r\n                    isStart={isStart} \r\n                    isFinish={isFinish} \r\n                    isWall={isWall}\r\n                    isVisited={isVisited} \r\n                    isInPath={isInPath} \r\n                    isBorder={isBorder}\r\n                    onMouseDown={(row,col)=>this.handleMouseDown(row,col)}\r\n                    onMouseUp={(row,col)=>this.handleMouseUp(row,col)}\r\n                    onMouseEnter={(row,col)=>this.handleMouseEnter(row,col)}>\r\n                     </Node>)\r\n                  })}\r\n              </div>\r\n          })\r\n        }\r\n        </div>\r\n        </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst creatGridWallToglled = (grid,row,col) => {\r\n    const newGrid = grid.slice()\r\n    console.log(newGrid)\r\n    const node = newGrid[row][col]\r\n    const newNode = {\r\n        ...node,\r\n        isWall:!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode\r\n    return newGrid\r\n}\r\n"]},"metadata":{},"sourceType":"module"}