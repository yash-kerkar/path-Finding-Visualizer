{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YASH\\\\path-find-visualizer\\\\src\\\\my components\\\\PathFindingVisualizer.js\";\nimport React, { Component } from 'react';\nimport Node from './Node';\nimport './Node.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PathFindVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    let nodes = [];\n\n    for (let i = 0; i < this.props.i; i++) {\n      let row = [];\n\n      for (let j = 0; j < this.props.j; j++) {\n        row.push([]);\n      }\n\n      nodes.push(row);\n    }\n\n    this.setState({\n      nodes: nodes\n    });\n  }\n\n  render() {\n    //const {nodes} = this.state;\n    let grid = {\n      textAlign: \"center\",\n      fontSize: \"0\"\n    };\n\n    const nodes = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n\n    return (\n      /*#__PURE__*/\n\n      /*<div style={grid} className=\"my-3\">\r\n      {\r\n        nodes.map((row,rowIdx)=>{\r\n            return <div>\r\n                {row.map((node,nodeIdx) => {\r\n                return (<Node></Node>)\r\n                })}\r\n            </div>\r\n        })\r\n      }\r\n      </div>*/\n      _jsxDEV(\"div\", {\n        style: grid,\n        children: nodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/YASH/path-find-visualizer/src/my components/PathFindingVisualizer.js"],"names":["React","Component","Node","PathFindVisualizer","constructor","props","state","nodes","componentDidMount","i","row","j","push","setState","render","grid","textAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;;;AAEA,eAAe,MAAMC,kBAAN,SAAiCF,SAAjC,CAA2C;AACtDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAID,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWI,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWM,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnCD,QAAAA,GAAG,CAACE,IAAJ,CAAS,EAAT;AACH;;AACDL,MAAAA,KAAK,CAACK,IAAN,CAAWF,GAAX;AACH;;AACD,SAAKG,QAAL,CAAc;AAACN,MAAAA,KAAK,EAACA;AAAP,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,SAAS,EAAC,QADH;AAEPC,MAAAA,QAAQ,EAAC;AAFF,KAAX;;AAIA,UAAMV,KAAK,gBAAG;AAAA,8BACd;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,eAKd;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALc;AAAA,oBAAd;;AAUA;AAAA;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AAAK,QAAA,KAAK,EAAEQ,IAAZ;AAAA,kBACKR;AADL;AAAA;AAAA;AAAA;AAAA;AAZA;AAgBH;;AAlDqD","sourcesContent":["import React, { Component } from 'react';\r\nimport Node from './Node';\r\nimport './Node.css';\r\n\r\nexport default class PathFindVisualizer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {nodes:[]};\r\n    }\r\n\r\n    componentDidMount(){\r\n        let nodes = [];\r\n        for (let i = 0; i < this.props.i; i++) {\r\n            let row = []\r\n            for (let j = 0; j < this.props.j; j++) {\r\n                row.push([])\r\n            }\r\n            nodes.push(row)\r\n        }\r\n        this.setState({nodes:nodes})\r\n    }\r\n\r\n    render(){\r\n        //const {nodes} = this.state;\r\n        let grid = {\r\n            textAlign:\"center\",\r\n            fontSize:\"0\"\r\n        }\r\n        const nodes = <>\r\n        <div>\r\n            <div className=\"node\"></div>\r\n            <div className=\"node\"></div>\r\n        </div>\r\n        <div>\r\n            <div className=\"node\"></div>\r\n            <div className=\"node\"></div>\r\n        </div>\r\n        </>\r\n        return(\r\n        /*<div style={grid} className=\"my-3\">\r\n        {\r\n          nodes.map((row,rowIdx)=>{\r\n              return <div>\r\n                  {row.map((node,nodeIdx) => {\r\n                  return (<Node></Node>)\r\n                  })}\r\n              </div>\r\n          })\r\n        }\r\n        </div>*/\r\n        <div style={grid}>\r\n            {nodes}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}