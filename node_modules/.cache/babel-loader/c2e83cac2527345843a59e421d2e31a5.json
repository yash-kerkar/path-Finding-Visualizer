{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YASH\\\\path-find-visualizer\\\\src\\\\my components\\\\PathFindingVisualizer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PathFindVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: []\n    };\n  }\n\n  createGrid() {\n    let node = {\n      width: \"20px\",\n      height: \"20px\",\n      backgroundColor: \"white\",\n      outline: \"1px solid rgba(144, 175, 175, 0.75)\",\n      display: \"inline-block\",\n      fontSize: \"0\"\n    };\n\n    let newNode = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: node\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }, this);\n\n    let grid = [];\n\n    for (let i = 0; index < this.props.i; i++) {\n      let row = [];\n\n      for (let j = 0; j < this.props.j; j++) {\n        row.push(newNode);\n      }\n\n      grid.push(row);\n    }\n\n    this.setState({\n      grid: grid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/YASH/path-find-visualizer/src/my components/PathFindingVisualizer.js"],"names":["React","Component","PathFindVisualizer","constructor","props","state","grid","createGrid","node","width","height","backgroundColor","outline","display","fontSize","newNode","i","index","row","j","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,kBAAN,SAAiCD,SAAjC,CAA2C;AACtDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAb;AACH;;AAEDC,EAAAA,UAAU,GAAE;AACR,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAC,MADC;AAEPC,MAAAA,MAAM,EAAC,MAFA;AAGPC,MAAAA,eAAe,EAAC,OAHT;AAIPC,MAAAA,OAAO,EAAC,qCAJD;AAKPC,MAAAA,OAAO,EAAC,cALD;AAMPC,MAAAA,QAAQ,EAAC;AANF,KAAX;;AAQA,QAAIC,OAAO,gBAAG;AAAK,MAAA,KAAK,EAAEP;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAd;;AACA,QAAIF,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBC,KAAK,GAAG,KAAKb,KAAL,CAAWY,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAIE,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWe,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnCD,QAAAA,GAAG,CAACE,IAAJ,CAASL,OAAT;AACH;;AACDT,MAAAA,IAAI,CAACc,IAAL,CAAUF,GAAV;AACH;;AACD,SAAKG,QAAL,CAAc;AAACf,MAAAA,IAAI,EAACA;AAAN,KAAd;AACH;;AAEDgB,EAAAA,MAAM,GAAE;AACJ,wBACA;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;;AAnCqD","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class PathFindVisualizer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {grid:[]};\r\n    }\r\n\r\n    createGrid(){\r\n        let node = {\r\n            width:\"20px\",\r\n            height:\"20px\",\r\n            backgroundColor:\"white\",\r\n            outline:\"1px solid rgba(144, 175, 175, 0.75)\",\r\n            display:\"inline-block\",\r\n            fontSize:\"0\"\r\n        };\r\n        let newNode = <div style={node}></div>;\r\n        let grid = [];\r\n        for (let i = 0; index < this.props.i; i++) {\r\n            let row = []\r\n            for (let j = 0; j < this.props.j; j++) {\r\n                row.push(newNode)\r\n            }\r\n            grid.push(row)\r\n        }\r\n        this.setState({grid:grid})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div class=\"my-4\">\r\n        {\r\n            \r\n        }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}